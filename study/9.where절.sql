-- 2022/10/11 TUESDAY!!

-- BETWEEN, IN, LIKE
SELECT * FROM SQLD.TB_EMP K
WHERE K.BIRTH_DE BETWEEN '19900101' AND '19991231'	-- AND k.birth_de >= '19900101' AND k.birth_de <= '19991231'
AND K.DEPT_CD IN ('100004', '100006')	-- 디자인팀, 데이터팀
AND K.ADDR LIKE '%수원시%';

-- LIKE : _
SELECT * FROM SQLD.TB_EMP K
WHERE K.EMP_NM LIKE '박__';

-- NULL
SELECT * FROM SQLD.TB_EMP K
WHERE K.DIRECT_MANAGER_EMP_NO IS NULL;

-- AND, OR
SELECT * FROM SQLD.TB_EMP
WHERE BIRTH_DE BETWEEN '19900101' AND '19991231'
AND DEPT_CD IN ('100004', '100006')
AND ( ADDR LIKE '%수원시%' OR ADDR LIKE '%성남시%' );

SELECT * FROM SQLD.TB_EMP
WHERE BIRTH_DE BETWEEN '19900101' AND '19991231'
AND DEPT_CD IN ('100004', '100006')
AND NOT ( ADDR LIKE '%수원시%' OR ADDR LIKE '%성남시%' );

-- 부정비교연산자
-- !=			: 같지않다.
-- <>			: 같지않다.
-- ^=			: 같지않다.
-- NOT 컬럼명 =	: ~와 같지 않다.
-- NOT 컬럼명 >	: ~보다 크지 않다.
SELECT * FROM sqld.TB_SAL_HIS
WHERE PAY_DE >= '20200501'
AND PAY_DE <= '20200531'
AND PAY_AMT >= 5500000;

SELECT * FROM sqld.TB_SAL_HIS
WHERE PAY_DE >= '20200501'
AND PAY_DE <= '20200531'
AND NOT PAY_AMT >= 5500000;

SELECT * FROM sqld.TB_EMP
WHERE BIRTH_DE BETWEEN '19900101' AND '19991231'
AND DEPT_CD IN ('100004', '100006')
AND SEX_CD <> '1';

SELECT * FROM sqld.TB_EMP
WHERE BIRTH_DE BETWEEN '19900101' AND '19991231'
AND DEPT_CD NOT IN ('100004', '100006')
AND SEX_CD <> '1'
AND DIRECT_MANAGER_EMP_NO IS NOT NULL;



-- 문자유형 비교 방법 : 양쪽 모두 CHAR타입인 경우
DROP TABLE SQLD.CHAR_COMPARE;

CREATE TABLE SQLD.CHAR_COMPARE 
(
SN CHAR(10),
CHAR_COMPARE_4 CHAR(4),
CHAR_COMPARE_6 CHAR(6)
);

INSERT INTO SQLD.CHAR_COMPARE VALUES ('1000000001', 'SQLD', 'SQLD');
INSERT INTO SQLD.CHAR_COMPARE VALUES ('1000000002', 'SQLD', 'SQLD');

SELECT * FROM sqld.CHAR_COMPARE;

SELECT 
	REPLACE(CHAR_COMPARE_4, ' ', '_') AS CHAR_COMPARE_4,
	REPLACE(CHAR_COMPARE_6, ' ', '_') AS CHAR_COMPARE_6 
FROM SQLD.CHAR_COMPARE;

SELECT 
	REPLACE(CHAR_COMPARE_4, ' ', '_') AS CHAR_COMPARE_4,
	REPLACE(CHAR_COMPARE_6, ' ', '_') AS CHAR_COMPARE_6 
FROM SQLD.CHAR_COMPARE
WHERE SN = '1000000001'
AND CHAR_COMPARE_4 = CHAR_COMPARE_6;

SELECT 
	REPLACE(CHAR_COMPARE_4, ' ', '_') AS CHAR_COMPARE_4,
	REPLACE(CHAR_COMPARE_6, ' ', '_') AS CHAR_COMPARE_6 
FROM SQLD.CHAR_COMPARE
WHERE SN = '1000000002'
AND CHAR_COMPARE_4 > CHAR_COMPARE_6;



-- 문자유형비교방법 : 비교연산자중 한쪽이 varchar인경우
DROP TABLE SQLD.VARCHAR_COMPARE;

CREATE TABLE SQLD.VARCHAR_COMPARE
(
SN CHAR(10),
CHAR_COMPARE_4 CHAR(4),
VARCHAR_COMPARE_6 VARCHAR(6)
);

INSERT INTO SQLD.VARCHAR_COMPARE VALUES('1000000001', 'SQLD', 'SQLD  ');
INSERT INTO SQLD.VARCHAR_COMPARE VALUES('1000000002', 'SQLD', 'SQLA  ');
INSERT INTO SQLD.VARCHAR_COMPARE VALUES('1000000003', 'SQLD', 'SQLD');

SELECT * FROM sqld.VARCHAR_COMPARE;

SELECT 
	REPLACE(CHAR_COMPARE_4, ' ', '_') AS varCHAR_COMPARE_4,
	REPLACE(VARCHAR_COMPARE_6, ' ', '_') AS varCHAR_COMPARE_6 
FROM SQLD.VARCHAR_COMPARE;

SELECT 			-- 길이가 달라서 같지 않다고 판단 : WHERE SN = '1000000001' 인경우
	REPLACE(CHAR_COMPARE_4, ' ', '_') AS VARCHAR_COMPARE_4,
	REPLACE(VARCHAR_COMPARE_6, ' ', '_') AS VARCHAR_COMPARE_6 
FROM SQLD.VARCHAR_COMPARE
WHERE SN = '1000000003'
AND CHAR_COMPARE_4 = VARCHAR_COMPARE_6;

SELECT
	REPLACE(CHAR_COMPARE_4, ' ', '_') AS VARCHAR_COMPARE_4,
	REPLACE(VARCHAR_COMPARE_6, ' ', '_') AS VARCHAR_COMPARE_6 
FROM SQLD.VARCHAR_COMPARE
WHERE SN = '1000000001'
AND CHAR_COMPARE_4 <> VARCHAR_COMPARE_6;

-- 비교연산자중 한쪽이 varchar인경우(trim 함수를 사용해보자)	--> TRIM : 공백 제거해 줄게!
SELECT
	REPLACE(CHAR_COMPARE_4, ' ', '_') AS VARCHAR_COMPARE_4,
	REPLACE(VARCHAR_COMPARE_6, ' ', '_') AS VARCHAR_COMPARE_6 
FROM SQLD.VARCHAR_COMPARE
WHERE SN = '1000000001'
AND CHAR_COMPARE_4 = TRIM( VARCHAR_COMPARE_6);


-- 문자유형비교방법 : 상수값과 비교
SELECT
	REPLACE(CHAR_COMPARE_4, ' ', '_') AS VARCHAR_COMPARE_4,
	REPLACE(VARCHAR_COMPARE_6, ' ', '_') AS VARCHAR_COMPARE_6 
FROM SQLD.VARCHAR_COMPARE
WHERE SN = '1000000001'
AND CHAR_COMPARE_4 = 'SQLD';

SELECT	-- 상수값은 뒤에 공백이 없으므로 같지 않다.
	REPLACE(CHAR_COMPARE_4, ' ', '_') AS VARCHAR_COMPARE_4,
	REPLACE(VARCHAR_COMPARE_6, ' ', '_') AS VARCHAR_COMPARE_6 
FROM SQLD.VARCHAR_COMPARE
WHERE SN = '1000000001'
AND VARCHAR_COMPARE_6 = 'SQLD';
-- 나오게 하려면
SELECT	-- 똑같이 공백 2개 넣으면 되지.
	REPLACE(CHAR_COMPARE_4, ' ', '_') AS VARCHAR_COMPARE_4,
	REPLACE(VARCHAR_COMPARE_6, ' ', '_') AS VARCHAR_COMPARE_6 
FROM SQLD.VARCHAR_COMPARE
WHERE SN = '1000000001'
AND VARCHAR_COMPARE_6 = 'SQLD  ';


SELECT * FROM SQLD.TB_SAL_HIS;
-- 집합의 일부분만 출력
SELECT * FROM SQLD.TB_SAL_HIS
WHERE PAY_DE >= '20200501'
AND PAY_DE >= '20200531'
AND ROWNUM <= 10		-- 10건을
ORDER BY PAY_AMT DESC;	-- 내림차순으로

SELECT * FROM 
	(SELECT * FROM SQLD.TB_SAL_HIS
		WHERE PAY_DE >= '20200501'
		AND PAY_DE >= '20200531'
		AND ROWNUM <= 10
		ORDER BY PAY_AMT DESC
	)
WHERE ROWNUM <= 10;